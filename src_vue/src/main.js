// This is mostly Orbit boilerplate generated by orbit-cli
import { createApp, reactive } from 'vue'
import { createPinia } from 'pinia';
import { createRouter, createWebHashHistory } from 'vue-router'
import { OrbitConnection, BaseClass } from '@/../node_modules/orbit-component-base'
import { menu as orbit_component_mmsdir } from '@/components/mmsdir.js';
import VueLogger from 'vuejs3-logger';
import PrimeVue from 'primevue/config';
import App from './App.vue'
import metadata from '@/../package.json';
import ConfirmationService from 'primevue/confirmationservice';

const router = createRouter({ history: createWebHashHistory(), routes: [] })
const pinia = createPinia()
window.pinia = pinia

const isProduction = process.env.NODE_ENV === 'production';
const options = {
    isEnabled: true,
    // logLevel : isProduction ? 'error' : 'debug',
    logLevel: 'debug',
    stringifyArguments : false,
    showLogLevel : true,
    showMethodName : true,
    separator: '|',
    showConsoleColors: true
};
const app = createApp(App).use(VueLogger, options);
const menu = reactive([])

app.metadata = metadata
app.metadata.components = new Map()
pinia.use(BaseClass)
app.use(OrbitConnection)
app.provide('$menu', menu)
orbit_component_mmsdir(app, router, menu);
app.use(pinia)
app.use(router)
app.use(PrimeVue)
app.use(ConfirmationService);
app.mount('#mms-directory')
